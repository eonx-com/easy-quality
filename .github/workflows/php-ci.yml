name: PHP-CI
on:
    push:

defaults:
    run:
        working-directory: ./

jobs:
    composer:
        runs-on: ubuntu-latest
        timeout-minutes: 60
        strategy:
            matrix:
                php: ['8.1']
        name: Install composer dependencies
        steps:
            -   uses: eonx-com/actions-checkout@v2

            -   uses: eonx-com/actions-setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none

            -   run: composer --version

            -   name: Get the cached Composer dependencies
                id: cache-composer
                uses: eonx-com/actions-cache@v1
                with:
                    path: vendor
                    key: ${{ matrix.php }}-composer-${{ hashFiles('composer.lock') }}

            -   name: Install dependencies
                if: steps.cache-composer.outputs.cache-hit == false
                run: |
                    composer install --prefer-dist --no-progress --no-scripts
    output-tests:
        needs: composer
        runs-on: ubuntu-latest
        timeout-minutes: 60
        strategy:
            matrix:
                php: [ '8.1' ]
        name: Run Output module tests
        steps:
            - uses: eonx-com/actions-checkout@v2

            - uses: eonx-com/actions-setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  coverage: none

            - name: Get the cached Composer dependencies
              uses: eonx-com/actions-cache@v1
              with:
                  path: vendor
                  key: ${{ matrix.php }}-composer-${{ hashFiles('composer.lock') }}

            - name: Run Output module tests
              run: |
                  vendor/bin/phpunit --testsuit Output
    phpstan-tests:
        needs: composer
        runs-on: ubuntu-latest
        timeout-minutes: 60
        strategy:
            matrix:
                php: [ '8.1' ]
        name: Run PHPStan tests
        steps:
            - uses: eonx-com/actions-checkout@v2

            - uses: eonx-com/actions-setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  coverage: none

            - name: Get the cached Composer dependencies
              uses: eonx-com/actions-cache@v1
              with:
                  path: vendor
                  key: ${{ matrix.php }}-composer-${{ hashFiles('composer.lock') }}

            - name: Run PHPStan tests
              run: |
                  vendor/bin/phpunit --testsuit PHPStan
    rector-tests:
        needs: composer
        runs-on: ubuntu-latest
        timeout-minutes: 60
        strategy:
            matrix:
                php: ['8.1']
        name: Run Rector tests
        steps:
            -   uses: eonx-com/actions-checkout@v2

            -   uses: eonx-com/actions-setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none

            -   name: Get the cached Composer dependencies
                uses: eonx-com/actions-cache@v1
                with:
                    path: vendor
                    key: ${{ matrix.php }}-composer-${{ hashFiles('composer.lock') }}

            -   name: Run Rector tests
                run: |
                    vendor/bin/phpunit --testsuit Rector
    sniff-tests:
        needs: composer
        runs-on: ubuntu-latest
        timeout-minutes: 60
        strategy:
            matrix:
                php: ['8.1']
        name: Run ECS sniff tests
        steps:
            -   uses: eonx-com/actions-checkout@v2

            -   uses: eonx-com/actions-setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none

            -   name: Get the cached Composer dependencies
                uses: eonx-com/actions-cache@v1
                with:
                    path: vendor
                    key: ${{ matrix.php }}-composer-${{ hashFiles('composer.lock') }}

            -   name: Run ECS sniff tests
                run: |
                    vendor/bin/phpunit --testsuit ECS
